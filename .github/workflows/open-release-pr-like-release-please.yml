name: Open Release PR (develop → master, semver auto)

on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  open_release_pr:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout completo (fora do develop) e com tags/histórico
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master
      - name: Fetch remotes & tags
        run: |
          git fetch --prune origin
          git fetch --tags origin
        # Doc: fetch-depth: 0 e trazer tags explicitamente. :contentReference[oaicite:1]{index=1}

      # 2) Basear o trabalho DIRETO em 'develop' (que existe no remoto)
      - name: Switch to develop as working base
        run: |
          git checkout -B develop origin/develop

      # 3) Calcular PRÓXIMA versão (SemVer) pelos commits desde a última tag (dry run)
      - name: Compute next version & notes (dry run)
        id: ver
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          fetch_all_tags: true
          release_branches: ".*"
          tag_prefix: "v"
        # Outputs: new_tag, new_version, previous_tag, changelog. :contentReference[oaicite:2]{index=2}

      # 4) Escrever notas e versão (gera diff para a PR)
      - name: Write RELEASE_NOTES.md
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: RELEASE_NOTES.md
          contents: |
            ## ${{ steps.ver.outputs.new_tag }}

            ${{ steps.ver.outputs.changelog }}

      - name: Write VERSION
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: VERSION
          contents: "${{ steps.ver.outputs.new_version }}"

      # 5) Criar PR release/vX.Y.Z → master (commit/push feitos pela própria action)
      - name: Create PR (RP-like body)
        uses: peter-evans/create-pull-request@v7
        with:
          branch: "release/${{ steps.ver.outputs.new_tag }}" # ex.: release/v1.3.1
          base: "master"
          title: "chore(master): release ${{ steps.ver.outputs.new_version }}"
          labels: "release,autorelease: pending"
          commit-message: "chore(release): v${{ steps.ver.outputs.new_version }} [skip ci]"
          add-paths: |
            RELEASE_NOTES.md
            VERSION
          delete-branch: true
          body: |
            :robot: I have created a release *beep* *boop*

            ## [${{ steps.ver.outputs.new_tag }}](
            https://github.com/${{ github.repository }}/compare/${{ steps.ver.outputs.previous_tag }}...${{ steps.ver.outputs.new_tag }})

            ${{ steps.ver.outputs.changelog }}

            ---
            This PR was generated by a Release-Please-like workflow (semver from Conventional Commits).

      - name: Cleanup local temp branch
        if: always()
        run: |
          git checkout master
          git branch -D release/work || true
