name: Open Release PR (develop → master, RP-style)

on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  open_release_pr:
    runs-on: ubuntu-latest
    steps:
      # Checkout fora do develop e com histórico completo
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Fetch remotes & tags
        run: |
          git fetch --prune origin
          git fetch --tags origin

      # Última tag (para montar o compare link)
      - name: Get latest tag
        id: latest
        uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          semver_only: true

      # Cria branch de trabalho baseada em develop (local)
      - name: Create temp release branch from develop
        run: |
          git checkout -B release/work origin/develop

      # Gera CHANGELOG + calcula próxima versão (SemVer) SEM criar tag
      # Importante: 1) comitar na branch release/work; 2) NÃO tentar ler/bumpar package.json
      - name: Generate changelog (no version file / no tag)
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: "CHANGELOG.md"
          tag-prefix: "v"
          git-message: "chore(release): {version}"
          git-branch: "release/work" # envia commits para release/work (default seria ${{ github.ref }})
          skip-tag: "true" # não cria tag agora
          skip-commit: "false" # queremos o commit do CHANGELOG
          skip-git-pull: "true"
          skip-version-file: "true" # <<< evita procurar package.json (ou outro arquivo de versão)

      # Abre PR release/x.y.z → master com "cara" de release-please
      - name: Create PR (RP-like body)
        uses: peter-evans/create-pull-request@v7
        with:
          branch: "release/${{ steps.changelog.outputs.version }}" # a action cria/pusha essa branch remota
          base: "master"
          title: "chore(master): release ${{ steps.changelog.outputs.version }}"
          labels: "release,autorelease: pending"
          body: |
            :robot: I have created a release *beep* *boop*

            ## [${{ steps.changelog.outputs.version }}](
            https://github.com/${{ github.repository }}/compare/${{ steps.latest.outputs.tag && startsWith(steps.latest.outputs.tag, 'v') && steps.latest.outputs.tag || 'v0.0.0' }}...v${{ steps.changelog.outputs.version }})

            ${{ steps.changelog.outputs.clean_changelog }}

            ---
            This PR was generated with a Release-Please-style workflow.
